{
  "name": "mysql-native",
  "description": "MySql protocol client for Node.Js",
  "keywords": [
    "mysql",
    "native",
    "sql",
    "database",
    "client",
    "pool"
  ],
  "homepage": "http://github.com/sidorares/nodejs-mysql-native",
  "version": "0.4.7",
  "author": {
    "name": "Andrey Sidorov",
    "email": "sidorares@yandex.ru"
  },
  "bugs": {
    "url": "http://github.com/sidorares/nodejs-mysql-native/issues"
  },
  "license": "MIT",
  "repository": [
    {
      "type": "git",
      "url": "http://github.com/sidorares/nodejs-mysql-native"
    }
  ],
  "main": "./lib/mysql-native",
  "engines": {
    "node": ">=0.6.0"
  },
  "scripts": {
    "pretest": "NODE_ENV=test node test/setup_db",
    "test": "node test/expresso-wrapper"
  },
  "contributors": [
    {
      "name": "https://github.com/sidorares/nodejs-mysql-native/contributors"
    }
  ],
  "readme": "# About\nMysql client module for node.js, written in JavaScript. No other mysql runtime required.\n\n[![Build Status](https://secure.travis-ci.org/sidorares/nodejs-mysql-native.png)](http://travis-ci.org/sidorares/nodejs-mysql-native)\n\n# Install\n`npm install mysql-native`\n\n# Community\nCheck out the google group http://groups.google.com/group/node-mysql-native for questions/answers from users of the driver.\n\n\n# Example\n<pre>var db = require(\"mysql-native\").createTCPClient(); // localhost:3306 by default\ndb.auto_prepare = true;\nfunction dump_rows(cmd)\n{\n   cmd.addListener('row', function(r) { console.dir(r); } );\n}\n\ndb.auth(\"test\", \"testuser\", \"testpass\");\ndump_rows(db.query(\"select 1+1,2,3,'4',length('hello')\"));\ndump_rows(db.execute(\"select 1+1,2,3,'4',length(?)\", [\"hello\"]));\ndb.close();</pre>\n\noutput is:\nrow: [ 2, 2, 3, \"4\", 5]\nrow: [ 2, 2, 3, \"4\", 5]\n\n# Highlights\n\n* commands are pipelined\n* types are converted mysql<->javascript according to field type\n* prepared statements are cached and auto-prepared\n* row packet ( query ) and binary row packet ( execute ) handled transparently equal\n\n#API\n\n## Module Functions\n* createClient(socket) -  create client from duplex stream (TODO: add default path to local server socket)\n* createTCPClient(host, port) - create tcp client, default host 127.0.0.1, port 3306\n* createUNIXClient(path) - connect to unix domain socket, default is /var/run/mysqld/mysqld.sock\n\n## Client Functions\nAll commands fire 'end'() event at the end of command executing.\n\n* `auth(db, user, pass)` - perform mysql connection handshake. Should be always a first command (TODO: add default user/pass if missing?).\nEvents:\n    'authorized'(serverStatus) event. \n\n* `query(sql)` - simple query.\nEvents:\n    'field'(field) - one for each field description\n    'fields_eof'() - after last field\n    'row'(rows) - array of field values, fired for each row in result set\n\n* `client.prepre(sql)` - prepare a statement and store result in client.pscache\nEvents:\n    'prepared'(preparedStatement)\n    'parameter'(field) - input parameter description\n\n* `execute(sql, parameters)` - parameters is an array of values. Known types are sent in appropriate mysql binary type (TODO: currently this is not true, type is always string and input converted using param.toString() )\nEvents:\n   same as with query()\n   \n* `client.close` - create and enqueue corresponding command\n* `client.execute` also adds prepare command if there is no cached statement and client.auto_prepare set to true (TODO: add better api than client.auto_prepare flag)\n* `client.terminate` - close conection immediately\n\n# TODO\n\n* buffers \n\n# LINKS\n\nMySql protocol documentation:\n \n* <http://forge.mysql.com/wiki/MySQL_Internals_ClientServer_Protocol>\n\nOther node.js mysql clients:\n\n* <http://github.com/felixge/node-mysql>\n* <http://github.com/Sannis/node-mysql-libmysqlclient>\n* <http://github.com/Guille/node.dbslayer.js>\n",
  "_id": "mysql-native@0.4.7",
  "dist": {
    "shasum": "e6572053f5e4db41a3670ecffdea4a3267e7bf0a"
  },
  "_from": "mysql-native"
}
